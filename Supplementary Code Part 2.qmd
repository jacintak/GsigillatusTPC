---
title: "Thermal performance curves of *Gryllodes sigillatus*"
subtitle: "Part 2: Effects of rearing temperature on reproductive output"
affiliation: "School of Biology, Carleton University, Ottawa, Canada"
---

# Aim

This experiment aimed to characterise the effects of rearing temperature on the reproductive output of *Gryllodes sigillatus*, the banded cricket under common garden conditions. This experiment follows up from Part 1 and uses a subset of temperature treatments from Part 1.

# Design

  * 5 temperatures: 30, 32, 34, 36, 38 &deg;C
  * 40 crickets per temperature reared to adulthood, split across 2 incubators and moved between incubators three times a week
  * Crickets that moulted into the adult instar within a week were paired and moved to 32 &deg;C.
  
# Setup
```{r}
library(tidyverse)
# Set plot themes
ggplot2::theme_set(theme_classic())
ggplot2::theme_update(text = element_text(size = 10),
                      panel.background = element_rect(fill = "transparent"),
                      plot.background = element_rect(fill = "transparent",
                                                     colour = NA),
                      legend.box.background = element_rect(fill = "transparent",
                                                           colour = NA),
                      legend.background = element_rect(fill = "transparent"),
                      strip.background = element_rect(fill = "transparent", 
                                                      colour = NA),
                      strip.text = element_text(face = "bold")
                      )
# Colour palettes
sex_pal <- c("gray60", "#E69F00", "#0072B2")  # Sex
temperature_pal <- viridisLite::viridis(end = 0.95, n = 10, option = "plasma")[6:10]
```

## Import data
```{r}
# Import data

# Parent ID
f1_P <- read.csv("F1/data/F1_ParentID.csv") %>% 
  # Remove excluded crickets
  filter(excluded == 0) %>% 
  # Format dates
  mutate(across(starts_with("date"), \(x) as.Date(x, "%d/%m/%Y")),
         temperature = as.factor(temperature)) %>% 
  # Calculate time to subadult (6th instar), longevity and time to adulthood (8th instar)
  mutate(adult_mass = 1000 * (container_adult - container), 
         time_subadult = date_subadult - date_hatched,
         time_adult = date_adult - date_hatched,
         longevity = ifelse(reason_removed == "Dead", date_end - date_hatched, NA))

f1_pairs <- f1_P %>% 
  select(temperature, ID_P, sex, pair, date_paired) %>% 
  drop_na(pair) %>% 
  pivot_wider(names_from = sex,
              values_from = ID_P)

# Eggs
f1_Eggs <- read.csv("F1/data/F1_Eggs.csv") %>% 
  pivot_longer(-pair, names_to = c(".", "date"), names_prefix = "date", names_sep = "_", values_to = "eggs") %>% 
  select(-2) %>% 
  mutate(date = as.Date(date, format = "%d.%m.%Y")) %>% 
  # removed excluded pairs
  inner_join(., f1_pairs, by = "pair") %>% 
  mutate(day = as.numeric(date - date_paired) %>% ifelse(. < 0, NA, .)) %>% 
  drop_na(day)

# Nymphs
f1_f1 <- read.csv("F1/data/F1_hatch.csv") %>%
  mutate(date_laid = as.Date(date_laid, "%d/%m/%Y"),
         date_hatched = as.Date(date_hatched, "%d/%m/%Y"),
         dev_time = as.numeric(date_hatched - date_laid)) %>% 
  left_join(., f1_pairs, by = "pair")
```

## Sample sizes

* 70 pairs in total
* 3 died in one week = 67
* 63 pairs produced at least 1 egg
* 4 pairs produced no eggs
* 4 pairs produced no batches over 5 eggs

```{r}
n_distinct(f1_Eggs$pair)
n_distinct(f1_pairs$pair)

# number per temperature
f1_pairs %>% group_by(temperature) %>% tally()

# number of productive pairs
f1_Eggs %>% 
  group_by(pair) %>% 
  filter(eggs >= 1) %>% 
  distinct(pair, temperature) %>% 
  group_by(temperature) %>%
  tally()

# number of failed pairs
failed <- f1_Eggs %>% 
  group_by(pair, temperature) %>%
  summarise(sum = sum(eggs, na.rm = TRUE)) %>% 
  filter(sum == 0) %>% 
  pull(pair)

# pairs incubated
n_distinct(f1_f1$pair)

# incubated per temperature
f1_f1 %>% 
  distinct(temperature, pair) %>% 
  group_by(temperature) %>% 
  tally()
```

## Create variables

 1. Extract first date eggs were laid
 2. Calculate day since first egg was laid
    * 2 is the first day of egg laying
 
```{r}
f1_Eggs <- f1_Eggs %>% 
  group_by(pair) %>% 
  filter(eggs >= 1) %>%
  mutate(first_egg = first(date)) %>% 
  select(pair, first_egg) %>% 
  distinct() %>% 
  left_join(f1_Eggs, ., by = "pair") %>% 
  mutate(egg_day = (as.numeric(date - first_egg) + 2) %>% ifelse(. <= 0, NA, .))

lessfive <- f1_Eggs %>% 
  filter(!pair %in% c(6, 7, 11, 39)) %>% 
  drop_na(eggs) %>% 
  drop_na(egg_day) %>% 
  mutate(five = ifelse(eggs <5, TRUE, FALSE)) %>% 
  group_by(pair) %>% 
  count(five) %>% 
  pivot_wider(names_from = five, values_from = n) %>% 
  filter(is.na(`FALSE`)) %>% 
  pull(pair)
```


# Temperature

Incubator temperatures are within acceptable bounds. 

```{r inkbird}
# List files
inkbird_files <- list.files("F1/data/inkbirds/",
                            full.names = TRUE)

# Import all files
inkbird <- lapply(FUN = read.csv, inkbird_files, skipNul = TRUE)
# Name the files based on file name: regrex all characters between "inkbirds/" and "_log"
names(inkbird) <- str_extract(inkbird_files,
                              pattern = "(?<=inkbirds/)(.*)(?=_log)") 

# Tidy columns
inkbird <- inkbird %>% 
  map(~ .x %>% select(-starts_with("MAC"))) %>% 
  map(~ mutate(.x, Time = as.POSIXct(Time))) %>% 
  map(~ .x %>% rename(Temperature = 2,
                      Humidity = 3)) %>% 
  # Trim data to experiment
  bind_rows(., .id = "Target_temp") %>%  # add list name as ID column
  separate(Target_temp, c("Target_temp", "Incubator")) %>% 
  mutate(Target_temp = str_extract(Target_temp, "[^_]+") %>% 
           as.numeric()) %>% # all characters before _
  mutate(Target_temp = as.character(Target_temp),
         row_id = row_number()) %>% 
  group_by(Incubator) %>% 
  slice_head(n=-10) %>% 
  slice_tail(n=-3) %>% 
  ungroup()
```

```{r}
# Summary stats
inkbird %>% 
  group_by(Incubator, Target_temp) %>% 
  summarise(Observed_temp = mean(Temperature),
            sd = sd(Temperature)) %>% 
  arrange(Target_temp)
```


# Survival to adulthood

Above 90% survival to adulthood for all temperatures except 38 &deg;C which had 30%.

```{r}
#| label: survival
surv <- f1_P %>% 
  filter(excluded == 0) %>% 
  group_by(temperature) %>% 
  mutate(total = n()) %>% 
  group_by(temperature, total) %>% 
  count(adult = !is.na(adult_mass)) %>% 
  mutate(prop = n/total * 100) %>% 
  filter(adult == "TRUE")

surv
```

# Time to adulthood

Crickets at higher temperatures develop faster but there is no difference between sexes within temperature or sex overall (Two-way ANOVA). 

```{r}
#| label: time-adult
#| fig-cap: "Time to reach adulthood (8th instar) for crickets reared at 5 temperatures."

ggplot(filter(f1_P, sex %in% c("Male", "Female")), 
       aes(temperature, time_adult,
                 colour = sex, group = sex)) +
   geom_point(aes(shape = sex), position = position_jitterdodge(
               jitter.height = 0, 
               jitter.width = 0.2,
               dodge.width = 0.5,
               seed = 1),
             size = 2,
             alpha = 0.5) +
  stat_summary(geom = "crossbar", 
               fun = mean,
               fun.min = function(x) mean(x) - sd(x),
               fun.max = function(x) mean(x) + sd(x),
               width = 0.5,
               linewidth = 0.7,
               position = position_dodge()) +
  scale_colour_manual(values = sex_pal[2:3]) +
  scale_shape_manual(values = c(16, 1)) +
  scale_y_continuous(name = "Time to adulthood (day)",
                     breaks = seq(0, 55, 5),
                     expand = expansion(mult = c(0, 0)),
                     limits = c(20, 55)) +
  scale_x_discrete(name = "Temperature (Â°C)",
                   expand = expansion(mult = c(0, 0))) +
  theme(legend.position = "none")
```


```{r}
anova(lm(as.numeric(time_adult) ~ temperature * sex, f1_P))
```


# Fecundity

## Individuals

Pair 34 laid a lot of eggs on day 38 but had not before.

```{r}
f1_Eggs %>% 
ggplot(aes(egg_day, eggs, group = pair, colour = temperature)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  geom_line(alpha = 0.3) +
  scale_colour_manual(values = temperature_pal) +
  facet_grid(temperature~.) +
  theme(legend.position = "none")
```

Fecundity at 38 &deg;C is very low over the first 14 days from when a pair started laying. Fecundity increases over time but there is no difference in temperature. 

## Conservative measure of batches

Keeps only batches of more than 5 eggs and the first 7 instances.

Strongly biases fecundity upwards.

```{r}
filtered_eggs <- f1_Eggs %>% 
  group_by(pair) %>%
  filter(eggs >= 5) %>% 
  # Keep only the first 14 days
  slice_head(n = 7) 

c_mean_fecundity <- filtered_eggs %>% 
  group_by(pair, temperature) %>% 
  summarise(fecundity_pair = mean(eggs, na.rm = TRUE))

ggplot() +
  stat_summary(data = c_mean_fecundity, 
               aes(temperature, fecundity_pair, colour = temperature),
               fun.data = mean_se, geom = "errorbar", width = 0.5) +
  stat_summary(data = c_mean_fecundity, 
               aes(temperature, fecundity_pair, colour = temperature),
               geom = "crossbar",
  fun = mean,
  width = 0.5,
  fatten = 1) +
  geom_point(data = c_mean_fecundity, 
             aes(temperature, fecundity_pair, colour = temperature),
             alpha = 0.3,
             position = position_jitter(
    height = 0, 
    width = 0.2),
    size = 1.5,
    shape = 16) +
  scale_colour_manual("Temperature", values = temperature_pal) +  
  scale_y_continuous(name = "Mean fecundity (eggs)",
                     breaks = seq(0, 150, 25),
                     expand = expansion(mult = c(0.01, 0)),
                     limits = c(0, 150)) +
  scale_x_discrete(name = "Temperature (Â°C)",
                   expand = expansion(mult = c(0.1, 0.1))) +
  theme(legend.position = "none")
```


```{r}
# time series
filtered_eggs %>% 
  group_by(temperature, egg_day, .drop = FALSE) %>% 
  summarise(mean_egg = mean(eggs, na.rm = TRUE),
            sd_eggs = sd(eggs, na.rm = TRUE),
            n_eggs = n()) %>% 
  mutate(se_eggs = sd_eggs/sqrt(n_eggs)) %>% 
ggplot(., aes(egg_day, mean_egg, group = temperature, colour = temperature)) +
  geom_point() +
  geom_errorbar(aes(ymin = mean_egg-sd_eggs, ymax = mean_egg+sd_eggs), width = 0.2, alpha = 0.3) +
  geom_line() +
  scale_y_continuous("Mean fecundity (eggs per 48h)", limits = c(0, 150)) +
  scale_x_continuous("Batch number") +
  scale_colour_manual("Temperature", values = temperature_pal)
```

```{r}
lm(eggs ~ egg_day + temperature, filtered_eggs) %>%
  anova()
```


## By temperature

Overall there is no effect of temperature after considering parent size (as a ratio). 

There is an effect of female mass on fecundity where larger females lay more eggs but not temperature. This is expected because there is minimal difference in adult mass with temperature.

Censor data set to date when maximum 7 batches of more than 5 eggs was laid for each pair. 

Keep all individuals.

```{r}
# Censor time series
temp_eggs_all <- filtered_eggs %>% 
  slice_max(day) %>% 
  select(pair, day) %>% 
  rename(end_date = day) %>% 
  # Get the max date of 7 batches
  left_join(f1_Eggs, ., by = "pair") %>% 
  mutate(end_date = ifelse(is.na(end_date), 54, end_date)) %>% 
  mutate(flag = ifelse(day <=end_date, 1, 0)) %>% 
  filter(flag == 1)

# does not include failed pairs
temp_eggs1 <- filter(temp_eggs_all, !is.na(egg_day))
setdiff(temp_eggs_all$pair, temp_eggs1$pair)

# remove NA rows in failed pairs
temp_eggs_failed <- filter(temp_eggs_all, pair %in% failed) %>% 
  filter(!is.na(eggs))

temp_eggs <- bind_rows(temp_eggs1, temp_eggs_failed) %>% 
  # remove NA in poor performing pairs (dead)
  drop_na(eggs)

n_distinct(temp_eggs$pair)
summary(temp_eggs$eggs)
```


```{r}
# Get fecundity of each replicate pair
mean_fecundity <- temp_eggs %>% 
  group_by(temperature, pair) %>% 
  summarise(fecundity_pair = mean(eggs, na.rm = TRUE),
            med_eggs = median(eggs, na.rm = TRUE),
            sd_eggs = sd(eggs, na.rm = TRUE),
            n_batch = n(),
            total_eggs = sum(eggs, na.rm = TRUE)) %>% 
  mutate(sd_eggs = ifelse(is.na(sd_eggs), 0, sd_eggs)) %>% 
  mutate(se_eggs = sd_eggs/sqrt(n_batch)) %>% 
  ungroup()

summary(mean_fecundity$total_eggs)
summary(mean_fecundity$med_eggs)
```


```{r}
p_fecundity <- ggplot() +
  stat_summary(data = mean_fecundity, 
               aes(temperature, fecundity_pair, colour = temperature),
               fun.data = mean_se, geom = "errorbar", width = 0.5) +
  stat_summary(data = mean_fecundity, 
               aes(temperature, fecundity_pair, colour = temperature),
               geom = "crossbar",
  fun = mean,
  width = 0.5,
  fatten = 1) +
  geom_point(data = mean_fecundity, 
             aes(temperature, fecundity_pair, colour = temperature),
             alpha = 0.3,
             position = position_jitter(
    height = 0, 
    width = 0.2),
    size = 1.5,
    shape = 16) +
  scale_colour_manual("Temperature", values = temperature_pal) +  
  scale_y_continuous(name = "Mean fecundity (eggs)",
                     breaks = seq(0, 150, 25),
                     expand = expansion(mult = c(0.01, 0)),
                     limits = c(0, 150)) +
  scale_x_discrete(name = "Temperature (Â°C)",
                   expand = expansion(mult = c(0.1, 0.1))) +
  theme(legend.position = "none")

p_fecundity
```


```{r}
# Pair is random. Use ML to compare models
# egg_mod <- lme4::lmer(count ~ egg_day + (1|pair), na.omit(first_egg), REML = FALSE)
mod_temp <- nlme::lme(fecundity_pair ~ temperature, rand =  ~1|pair, mean_fecundity, method = "ML")
summary(mod_temp)
anova(mod_temp)
# Test random effect against only fixed effect model (Analysis of Deviance)
nlme::anova.lme(mod_temp, lm(fecundity_pair ~ temperature, mean_fecundity))
```


## Parent size

There is no relationship between fecundity and the ratio of female mass to male mass: numbers greater than 1 = female is larger

```{r}
mass_fecundity <- f1_P %>% 
  drop_na(adult_mass, pair) %>% 
  select(sex, pair, temperature, adult_mass) %>% 
  pivot_wider(names_from = sex, values_from = adult_mass) %>% 
  left_join(mean_fecundity, ., by = c("pair", "temperature")) %>% 
  mutate(adult_ratio = Female / Male)

# adult ratio
lm(fecundity_pair ~ adult_ratio + temperature, mass_fecundity) %>% 
  summary()

# Female only
summary(lm(fecundity_pair ~ Female + temperature, mass_fecundity))
# Male only
summary(lm(fecundity_pair ~ Male + temperature, mass_fecundity))


# check size disparity
lm(fecundity_pair ~ adult_ratio, mass_fecundity) %>% summary
plot(fecundity_pair ~ adult_ratio, mass_fecundity)
abline(lm(fecundity_pair ~ adult_ratio, mass_fecundity))
```

```{r}
ggplot() +
  geom_point(data = mass_fecundity, aes(Female, fecundity_pair, colour = temperature)) +
  scale_colour_manual("Temperature", values = temperature_pal) +  
  scale_y_continuous(name = "Mean fecundity (eggs)",
                     breaks = seq(0, 175, 25),
                     expand = expansion(mult = c(0.01, 0)),
                     limits = c(0, 175)) +
  scale_x_continuous(name = "Female mass (mg)",
                     breaks = seq(0, 500, 50),
                     expand = expansion(mult = c(0.01, 0)),
                     limits = c(0, 500)) +
  theme(legend.position = "none")
```

# Time to first oviposition

Crickets reared at 38 &deg;C have a delay in when they will start laying their first egg. 

```{r}
#| label: egg-delay
#| fig-cap: "Time to lay first egg for crickets reared at 5 temperatures."

egg_delay <- f1_Eggs %>% 
  mutate(egg_lag = as.numeric(date_paired - first_egg)) %>% 
  drop_na(egg_lag) %>% 
  distinct(pair, temperature, egg_lag) %>% 
  mutate(egg_lag = -egg_lag)

p_egg_delay <- ggplot(egg_delay, aes(temperature, egg_lag, colour = temperature)) +
  stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.5) +
  stat_summary(geom = "crossbar",
               fun = mean,
               width = 0.5,
               fatten = 1) +
  geom_point(alpha = 0.3,
             position = position_jitter(
    height = 0, 
    width = 0.2),
    size = 1.5,
    shape = 16) +
  scale_y_continuous(name = "Oviposition delay (days)", limits = c(0, 50),
                     expand = expansion(mult = c(0, 0))) +
  scale_x_discrete(name = "Temperature (Â°C)",
                   expand = expansion(mult = c(0.1, 0.1))) +
  scale_colour_manual(values = temperature_pal) +
  theme(legend.position = "none")

p_egg_delay
```

```{r}
anova(lm(egg_lag ~ temperature, egg_delay))

# Estimated marginal means with Tukey correction
emmeans::emmeans(lm(egg_lag ~ temperature, egg_delay), ~temperature) %>% pairs(adjust = "tukey") %>% 
  broom::tidy() %>% 
  filter(adj.p.value <= 0.05) 


# Pair is random. Use ML to compare models
# egg_mod <- lme4::lmer(count ~ egg_day + (1|pair), na.omit(first_egg), REML = FALSE)
mod_delay <- nlme::lme(egg_lag ~ temperature, rand =  ~1|pair, egg_delay, method = "ML")
summary(mod_delay)
anova(mod_delay)
# Test random effect against only fixed effect model (Analysis of Deviance)
nlme::anova.lme(mod_delay, lm(egg_lag ~ temperature, egg_delay))
```

# Adult mass

Temperature dependent differences in sex.

```{r}
#| label: adult-mass
#| fig-cap: "Adult mass (8th instar) for crickets reared at 5 temperatures."

ggplot(filter(f1_P, sex %in% c("Male", "Female")), 
       aes(temperature, adult_mass,
                 colour = sex, group = sex)) +
   geom_point(aes(shape = sex), position = position_jitterdodge(
               jitter.height = 0, 
               jitter.width = 0.2,
               dodge.width = 0.5,
               seed = 1),
             size = 2,
             alpha = 0.5) +
  stat_summary(geom = "crossbar", 
               fun = mean,
               fun.min = function(x) mean(x) - sd(x),
               fun.max = function(x) mean(x) + sd(x),
               width = 0.5,
               linewidth = 0.7,
               position = position_dodge()) +
  scale_colour_manual(values = sex_pal[2:3]) +
  scale_shape_manual(values = c(16, 1)) +
  scale_y_continuous(name = "Adult mass (mg)",
                     breaks = seq(0, 600, 100),
                     expand = expansion(mult = c(0, 0)),
                     limits = c(0, 600)) +
  scale_x_discrete(name = "Temperature (Â°C)",
                   expand = expansion(mult = c(0, 0))) +
  theme(legend.position = "none")
```

```{r}
anova(lm(adult_mass ~ temperature * sex, filter(f1_P, sex %in% c("Male", "Female"))))
```

## Relationships with female mass

Egg delay:

 * No effect of development time
 * No effect of female mass
 
Mean fecundity:

 * No effect of development time
 * Larger females lay more eggs (t(1, 67) = 2.5, P = 0.01)
 

```{r}
pair_fecundity <- f1_Eggs %>% 
  group_by(pair, temperature) %>%
  summarise(mean_egg = mean(eggs, na.rm = TRUE),
            sd_egg = sd(eggs, na.rm = TRUE),
            n_eggs = n()) %>% 
  mutate(se_eggs = sd_egg/sqrt(n_eggs))

pair_fecundity <- left_join(pair_fecundity, egg_delay, by = c("temperature", "pair"))

pair_fecundity <- f1_P %>% 
  filter(sex == "Female") %>% 
  drop_na(pair) %>% 
  select(temperature, pair, adult_mass, time_adult) %>% 
  left_join(pair_fecundity, ., by = c("temperature", "pair"))
  
ggplot(pair_fecundity, aes(adult_mass, mean_egg)) +
  geom_point() +
  geom_smooth(method = "lm")

summary(lm(mean_egg ~ egg_lag, pair_fecundity))

```

# Eggs

## Egg development time

So far, there is no difference in development time of the eggs. Coefficient of Variation is similar.

Removed outlier. Used pair averages

```{r}
pair_devtime <- f1_f1 %>% 
  filter(dev_time < 17) %>% 
  group_by(pair, temperature) %>% 
  summarise(pair_devtime = mean(dev_time, na.rm = TRUE),
            sd_devtime = sd(dev_time, na.rm = TRUE),
            n_devtime = n()) %>% 
  mutate(sd_devtime = ifelse(is.na(sd_devtime), 0, sd_devtime),
         pair_devtime = ifelse(is.na(pair_devtime), 0, pair_devtime)) %>% 
  filter(pair_devtime != 0)


mean_devtime <- pair_devtime %>% 
  group_by(temperature) %>% 
  summarise(mean_devtime = mean(pair_devtime, na.rm = TRUE),
            sd = sd(pair_devtime, na.rm = TRUE),
            n_devtime = n()) %>% 
  mutate(sd = ifelse(is.na(sd), 0, sd)) %>% 
  mutate(se_devtime = sd/sqrt(n_devtime),
         CV = (sd / mean_devtime) * 100)

p_devtime <- ggplot(pair_devtime, aes(temperature, pair_devtime, colour = temperature)) +
  stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.5) +
  stat_summary(geom = "crossbar",
               fun = mean,
               width = 0.5,
               fatten = 1) +
  geom_point(alpha = 0.3,
             position = position_jitter(
    height = 0, 
    width = 0.2),
    size = 1.5,
    shape = 16) +
  scale_colour_manual("Temperature", values = temperature_pal) +  
  scale_y_continuous(name = "Mean hatching time (days)",
                     breaks = seq(0, 20, 1),
                     expand = expansion(mult = c(0.01, 0)),
                     limits = c(5, 15)) +
  scale_x_discrete(name = "Temperature (Â°C)",
                   expand = expansion(mult = c(0.1, 0.1)),
                   limits = as.character(seq(30, 38, 2))) +
  theme(legend.position = "none")

p_devtime
```

```{r}
anova(lm(pair_devtime ~ temperature, pair_devtime))
knitr::kable(mean_devtime, digits = 3)

mod_devtime <- nlme::lme(dev_time ~ temperature, rand =  ~1|pair, drop_na(f1_f1, dev_time), method = "ML")
summary(mod_devtime)
anova(mod_devtime)
# Test random effect against only fixed effect model (Analysis of Deviance)
nlme::anova.lme(mod_devtime, lm(dev_time ~ temperature, drop_na(f1_f1, dev_time)))
```

## Hatching probability

Hatching probability is above 70% overall, highest at the lower temperature range.

```{r}
f1_f1 %>% 
  group_by(pair, temperature) %>% 
  summarise(success = (sum(hatching_success)/n()) * 100,
            batches = n()) %>%
  group_by(temperature) %>% 
  summarise(mean_success = mean(success))
```

## Hatching success

Overall mean hatching success is very low (22.3%) but two batches had 100%!

```{r}
hatching_success <- f1_Eggs %>% 
  select(pair, date, eggs, temperature) %>% 
  left_join(f1_f1, ., by = c("pair" = "pair",
                            "date_laid" = "date",
                            "temperature" = "temperature")) %>% 
  mutate(success = (no_hatchlings/eggs) * 100)  
  
summary(hatching_success$success)

sum_succ <- hatching_success %>% 
group_by(pair, temperature) %>% 
  summarise(mean_success = ifelse(is.nan(mean(success)), 0, mean(success))) %>% 
  group_by(temperature) %>% 
   summarise(n_pair = n(),
             mean = mean(mean_success),
             sd = sd(mean_success),
             min = min(mean_success),
             max = max(mean_success))

knitr::kable(sum_succ, digits = 2)
```

## Fitness

Sum total effect of selection 

absolute fitness = average number of surviving offspring
relative fitness = relative to one temperature

```{r}
hatching_success %>% 
  group_by(pair, temperature) %>% 
  summarise(offspring = mean(no_hatchlings)) %>% 
  group_by(temperature) %>% 
   summarise(mean_offspring = mean(offspring),
             sd_offspring = sd(offspring)) %>% 
left_join(surv, ., by = "temperature") %>% 
  mutate(abs_fitness = (prop/100) * mean_offspring,
         rel_fitness = abs_fitness/26.2) %>% 
  add_column(hatch_succ = sum_succ$mean)
```

# Statistics
```{r}
library(broom)
library(emmeans)

# Oviposition delay
ovi_delay <- aov(egg_lag ~ temperature, egg_delay)
summary(ovi_delay)

emmeans(ovi_delay, ~temperature) %>% pairs(adjust = "tukey") %>% 
  tidy() %>% 
  arrange(adj.p.value)

# Fecundity
fecundity <- aov(fecundity_pair ~ temperature, mean_fecundity)
summary(fecundity)

emmeans(fecundity, ~temperature) %>% pairs(adjust = "tukey") %>% 
  tidy()

# egg development
dev_time <- aov(pair_devtime ~ temperature, pair_devtime)
summary(dev_time)
```

***

# Figures
```{r}

library(patchwork)
library(cowplot)

# figure 3 - mass
fecundity_plot <- p_egg_delay +
  p_fecundity +
  p_devtime +
  plot_annotation(tag_levels = "A") 

fecundity_plot <- plot_grid(p_egg_delay,
                            p_fecundity,
                            p_devtime,
                            nrow = 1,
                            labels = "AUTO")


ggsave("F1/output/fecundity_plot.png", plot = fecundity_plot,
       dpi = 300,
       height = 80,
       width = 170,
       units = "mm")
```



