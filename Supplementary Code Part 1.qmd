---
title: "Thermal performance curves of *Gryllodes sigillatus*"
subtitle: "Part 1: Effects of rearing temperature on life history from hatch to death"
affiliation: "School of Biology, Carleton University, Ottawa, Canada"
---

# Introduction

This experiment aimed to characterise the effects of rearing temperature on the life history of *Gryllodes sigillatus*, the banded cricket. This experiment is Part 1 of the paper.

Personnel:

* Jacinta Kong
* Émile Vadboncoeur

## Design

Ten temperatures 20 -- 38 &deg;C in 2 &deg;C increments (Vevor incubators). 24 crickets in each incubator reared from hatch to death. 

## Response variables

Measured weekly on Monday

* Survival (@sec-surv)
* Growth (@sec-growth)
* Adult mass (@sec-adults)
* Sex
* Instar

***

# Code setup

`tidyverse` for data wrangling and visualisation.  
`emmeans` for Tukey HSD post-hoc test.

```{r setup}
library(knitr)
opts_chunk$set(message = FALSE, warning = FALSE)
 # Data handling
library(tidyverse)
library(broom)
library(cowplot) # Plotting
library(emmeans) # Post hoc testing
options(tibble.width = Inf,
        pillar.sigfig = 5)

# Set plot themes
ggplot2::theme_set(theme_classic())
ggplot2::theme_update(text = element_text(size = 10),
                      panel.background = element_rect(fill = "transparent"),
                      plot.background = element_rect(fill = "transparent",
                                                     colour = NA),
                      legend.box.background = element_rect(fill = "transparent",
                                                           colour = NA),
                      legend.background = element_rect(fill = "transparent"),
                      strip.background = element_rect(fill = "transparent", 
                                                      colour = NA),
                      strip.text = element_text(face = "bold")
)

# Colour palettes
temperature_pal <- viridisLite::viridis(end = 0.9, begin = 0.1, n = 10, option = "plasma")
```

## Metadata

TPC is the mass and demography data for the thermal performance curve characterisation in the mini incubators. Corrections in instar and sex have been made to the file.

observation: unique observation number  
experiment: title of experiment (tpc)  
recorder: person recording observation (Émile or Jacinta)  
date: date measurement was taken  
incubator_number: identity number of incubator (MacMillan Lab)  
temperature: incubation temperature  
cricket: identification number of cricket  
instar: inferred instar based on morphology (1-8)  
sex: inferred sex based on morphology (Juvenile, Male, Female)  
container: mass of container without cricket (grams)  
cricket_container: weighing by difference method (grams)  
notes: other observations and corrections applied if any  
date_start: date cricket started the experiment (Day 0)  
date_six_instar: date cricket was first observed to have sex characteristics (6th instar)  
date_adult: date cricket was first observed to be adult (8th instar)  
date_removed: date cricket was removed from the experiment  
reason_removed: reason for why cricket was removed from the experiment (e.g. dead, escaped, missing)  
excluded: Is cricket excluded from analysis? Yes (1), No (0)  
reason_excluded: reason for why cricket was excluded from analysis (e.g. accidental death, missing)  

```{r import}
# Weekly mass
tpc <- readxl::read_excel("tpc/TPC_mass.xlsx", sheet = "mass") %>% 
  mutate(mass = (cricket_container - container) * 1000,
         sex = factor(sex, levels = c("Juvenile", "Female", "Male")))

# Survival
tpc_survival <- readxl::read_excel("tpc/TPC_mass.xlsx", sheet = "survival")

# Calculate days and weeks
tpc <- left_join(tpc, tpc_survival, 
                 by = c("incubator_number" = "incubator_number",
                        "temperature" = "temperature",
                        "cricket" = "cricket"),
                 suffix = c(".y", "")) %>% 
  mutate(experiment_day = as.numeric(
    difftime(date, date_start, units = "days")
  ), 
  sex = ifelse(is.na(sex) == TRUE, "Juvenile", sex),
  week = difftime(floor_date(date, unit = "weeks", week_start = getOption("lubridate.week.start", 1)),
                  min(date), units = "weeks") %>% as.numeric()) %>% 
  mutate(sex = factor(sex, levels = c("Juvenile", "Female", "Male"))) %>%
  # Remove excluded crickets
  filter(excluded == 0) %>% 
  # Remove outlier in mass
  mutate(mass = ifelse(observation == 1778, NA, mass)) %>% 
  # Calculate development time
  mutate(time_sixth = as.numeric(date_subadult - date_start),
         time_maturity = as.numeric(date_adult - date_start),
         longevity = as.numeric(date_end - date_start)) %>% 
  # Calculate development rate
  mutate(dev_rate = 1/time_maturity) 
```

`experiment_day` is the time since the cricket started the experiment. `week` is the experiment day rounded to the week (starting Monday) since some crickets were replaced. 


## Adult mass

Adult mass is calculated as the mean of the first 4 observations of mass after reaching 8th instar to control for fluctuations in mass over time.

```{r}
adult_mass <- tpc %>% 
  drop_na(mass) %>% 
  filter(instar == 8) %>% 
  group_by(cricket) %>% 
  slice_head(n = 4) %>% 
  summarise(adult_mass = mean(mass, na.rm = TRUE))

tpc <- left_join(tpc, adult_mass, by = "cricket")

# Number of adult males and females
tpc_survival %>% 
  filter(!is.na(date_adult),
         excluded == 0) %>%
  count(sex)
```

## Sample sizes

247 crickets started.  
17 crickets excluded from analysis: accidental deaths or disappeared.  
47 other crickets culled at 20 and 22 &deg;C.  
Total of 183 crickets in all other temperatures. 77% survival to adulthood (not including low temperatures).

All crickets that were excluded are marked appropriately.

```{r}
# Number of crickets excluded
table(tpc_survival$excluded)

# Number of non-excluded crickets at 20 and 22
tpc_survival %>% 
  filter(excluded == 0) %>%
  count(temperature) %>% 
  print(n = 26)

# Number of crickets for analysis
247 - 17 - 23-24

# Total survival to adulthood
(79 + 62) / 183
```

***

# Survival {#sec-surv}

Excluding crickets that died in the first three days. Cricket 46 was not measured in week 2 and 192 was not measured in week 3. 

Survival is calculated from the number of deaths per week (@fig-surv).

```{r}
#| label: fig-surv
#| fig-cap: "Proportion of crickets surviving each week. Crickets that were excluded from analysis or were culled were not included."
surv_data <- tpc_survival %>% 
  # Calculate week cricket died
  mutate(week_death = difftime(date_end, date_start, units = "week") %>% 
           ceiling()) %>% 
  # Remove excluded crickets
  filter(excluded == 0) %>% 
  mutate(week = factor(week_death, levels = seq(0, 38)),
         temperature = as.factor(temperature)) %>% 
  group_by(temperature, .drop = FALSE) %>% 
  count(temperature, week) %>% 
  mutate(deaths = cumsum(n),
         survival = ifelse(temperature %in% c(20, 22) & !week %in% seq(1,8),
                           NA,  1-(deaths / max(deaths))),
         week = as.numeric(week)-1) %>% 
  mutate(survival = ifelse(week == 0 & is.na(survival), 1, survival))

surv_plot <- ggplot(surv_data, aes(week, survival * 100, group = temperature, colour = temperature)) +
  geom_line(alpha = 0.3) +
  geom_point(size = 1) +
  scale_colour_manual(name = "Temperature (°C)", values = temperature_pal) +
  scale_y_continuous(name = "Survival (%)",
                     expand = expansion(mult = c(0, 0),
                                        add = c(2, 0)),
                     labels = seq(100, 0, -10),
                     breaks = seq(100, 0, -10)) +
  scale_x_continuous(name = "Week", 
                     breaks = seq(0, 38, 2),
                     expand = expansion(c(0, 0), c(0.5, 0))) + 
  coord_cartesian(clip = "off")

surv_plot
```

## Proportion surviving to adulthood

Most crickets survived to adulthood at temperatures above 26 &deg;C and survival decreases above 36 &deg;C (@fig-adult-surv). 

Cricket 183 is included in survival to adulthood, but not included in longevity.

```{r}
#| label: fig-adult-surv
#| fig-cap: "Proportion of crickets surviving to adulthood (8th instar). Crickets that were excluded from analysis or were culled were not included."

prop_adult <- tpc_survival %>% 
  filter(excluded == 0,
         temperature >= 24) %>% 
  group_by(temperature) %>% 
  count(is.na(date_adult)) %>% 
  pivot_wider(names_from = 2,
              values_from = 3) %>% 
  rename("survived" = 2,
         "died" = 3) %>% 
  mutate(total = survived + died,
         proportion = survived / total,
         temperature = factor(temperature))


prop_adult_plot <- ggplot(prop_adult, aes(temperature, proportion, fill = temperature)) +
  geom_col() +
  scale_fill_manual(values = temperature_pal[-c(1,2)]) +
  scale_x_discrete(name = "Temperature (°C)") +
  scale_y_continuous(name = "Survival to adulthood",
                     limits = c(0, 1),
                     expand = expansion(mult = c(0, 0))) +
  theme(legend.position = "none") +
  coord_cartesian(clip = "off")
prop_adult_plot
```

## Statistics

Chi squared test comparing the frequencies of survival among temperature. 

H0: Survival to adulthood is similar across temperatures. All temperature groups should have the same expected value, accounting for sample size. 

```{r}
surv_adult <- tpc_survival %>% 
  filter(excluded == 0,
         temperature >= 24) %>% 
  group_by(temperature) %>% 
  mutate(is.adult = ifelse(is.na(date_adult), "died", "adult"),
         temperature = as.factor(temperature)) %>% 
  select(temperature, is.adult) 

adult_test <- chisq.test(surv_adult$is.adult, surv_adult$temperature)  
adult_test$expected
adult_test
```

***

# Crickets at low temperature

Summary statistics for crickets at 20 and 22 &deg;C at 8 weeks when they were culled.

```{r}
tpc %>% 
  filter(temperature <= 22,
         week == 8) %>% 
  group_by(temperature) %>% 
  summarise(mean_mass = mean(mass),
            se = sd(mass)/ sqrt(n()),
            median_instar = median(instar),
            min_instar = min(instar),
            max_instar = max(instar))
```


***

# Growth curves {#sec-growth}

## By week

```{r}
#| label: fig-mass-week
#| fig-cap: "Mean mass (± standard error) of crickets reared at 10 temperatures (colours) each week"

growth_curve <- tpc %>% 
  group_by(temperature, week) %>% 
  drop_na(mass) %>% 
  summarise(mean = mean(mass),
            se = sd(mass)/sqrt(n())) %>%
  mutate(temperature = as.character(temperature)) %>% 
  ggplot(aes(week, mean, col = temperature, group = temperature)) +
  geom_line(alpha = 0.3) +
  geom_point(size = 1) +
  scale_x_continuous(name = "Week",
                     limits = c(0, 38),
                     breaks = seq(0, 38, 2),
                     expand = expansion(c(0, 0), c(0.5, 0))) +
  scale_y_continuous(name = "Mass (mg)",
                     limits = c(0, 350),
                     breaks = seq(0, 450, 50),
                     expand = expansion(add = c(5, 0))) +
  scale_colour_manual(name = "Temperature (°C)", values = temperature_pal) +
  coord_cartesian(clip = "off") 

growth_curve
```

## Summary statistics

```{r}
# Mean of initial mass
tpc %>% 
  filter(week == 0) %>% 
  summarise(mean = mean(mass),
            se = sd(mass)/sqrt(n())) %>% 
  round(., 3)

# Mean adult mass
tpc %>% 
  drop_na(adult_mass) %>% 
  summarise(mean = mean(adult_mass),
            se = sd(adult_mass)/sqrt(n())) %>% 
  round(., 3)

# Mean adult mass by sex
tpc %>% 
  drop_na(adult_mass) %>% 
  group_by(sex) %>% 
  summarise(mean = mean(adult_mass),
            se = sd(adult_mass)/sqrt(n()))
```

## By instar

```{r}
# Label instances of adulthood
adult_index <- tpc %>% group_by(cricket) %>% 
  filter(instar == 8) %>% 
  mutate(index = row_number()) %>% 
  select(observation, index)

juv <- tpc %>% 
  filter(temperature %in% c(20, 22)) %>% 
  group_by(temperature, instar) %>% 
   summarise(mean_mass = mean(mass, na.rm = TRUE),
            se = sd(mass, na.rm = TRUE)/sqrt(n())) %>% 
  mutate(temperature = factor(temperature))

# Add to original dataset and filter
tpc_instar <- left_join(tpc, adult_index, by = c("observation", "cricket")) %>% 
  mutate(index = ifelse(is.na(index), 0, index),
         temperature = as.character(temperature)) %>% 
  group_by(cricket) %>% 
  filter(index <= 4,
         sex != "Juvenile") %>% 
  # Calculate mean mass per instar for each individual
  group_by(cricket, temperature, instar, sex) %>% 
  summarise(instar_mass = mean(mass, na.rm = TRUE)) %>% 
  ungroup() %>% 
  # Calculate mean mass per instar, pooling individuals
  group_by(temperature, instar, sex) %>% 
  summarise(mean_mass = mean(instar_mass, na.rm = TRUE),
            se = sd(instar_mass, na.rm = TRUE)/sqrt(n())) %>% 
  ungroup() %>% 
  bind_rows(mutate(juv, sex = "Female"),
            mutate(juv, sex = "Male"),
            .)
```


```{r}
#| label: fig-instarmass
#| fig-cap: "Mean mass (mg ± standard error) for each instar of crickets reared under one of 10 temperatures (colours). The mean mass at each instar for each individual was used to calculate mean instar mass pooling individuals. The first four observations of mass for each cricket were used to calculate mass at instar 8 (adult)."
  
instar_curve <- ggplot(tpc_instar, aes(instar, mean_mass, col = temperature, group = temperature)) +
  # geom_linerange(aes(y = mean_mass, ymin = mean_mass-se, ymax = mean_mass+se)) +
  geom_line(alpha = 0.3) +
  geom_point(size = 1) +
  scale_colour_manual(name = "Temperature (°C)", values = temperature_pal) +
  scale_y_continuous(name = "Mass (mg)",
                     expand = expansion(mult = c(0.02,0)),
                     limits = c(0, 350),
                     breaks = seq(0, 400, by = 50)) +
  scale_x_continuous(name = "Instar",
                     expand = expansion(mult = c(0.05,0)),
                     limits = c(1, 8.1),
                     breaks = seq(1, 8, by = 1)) +
  facet_grid(~sex) +
  coord_cartesian(clip = "off")

instar_curve
```

***

# Adults mass {#sec-adults}

Get mean of the first four observations of adult mass (1 month of adulthood).

```{r}
#| label: fig-3A
#| fig-cap: "Mean mass (± standard error) of adult female crickets reared at 8 temperatures (colours)."

female_mass <- tpc %>% 
  filter(temperature >= 24,
         sex == "Female",
         !is.na(adult_mass)) %>% 
  mutate(temperature = as.character(temperature)) %>% 
  select(cricket, temperature, sex, adult_mass) %>% 
  distinct() %>% 
  ggplot(aes(temperature, adult_mass, colour = temperature)) +
    stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.5) +
  stat_summary(geom = "crossbar",
               fun = mean,
               width = 0.5,
               fatten = 1) +
  geom_point(aes(shape = sex),
             alpha = 0.3,
             position = position_jitterdodge(
    jitter.height = 0, 
    jitter.width = 0.2,
    dodge.width = 1),
    size = 1.5) +
  scale_colour_manual(name = "Temperature (°C)", values = temperature_pal[-c(1,2)]) +
  scale_y_continuous(name = "Adult mass (mg)",
                     breaks = seq(0, 450, 50),
                     expand = expansion(mult = c(0, 0)),
                     limits = c(0, 450)) +
  labs(x =  "Temperature (°C)") +
  scale_shape_manual(name = "Sex",
                     values = c(16, 1)) +
  theme(legend.position = "none") +
  coord_cartesian(clip = "off") +
  annotate("text", label = "Females", x = 1, y = Inf, vjust = 1, hjust = 0) +
  annotate("text", label = "Temperature: F=11.01 P<0.01", x = 1, y = 450/11, vjust = 1, hjust = 0)

female_mass
```


```{r}
#| label: fig-3B
#| fig-cap: "Mean mass (± standard error) of adult male crickets reared at 8 temperatures (colours)."

male_mass <- tpc %>% 
  filter(temperature >= 24,
         sex == "Male",
         !is.na(adult_mass)) %>% 
  mutate(temperature = as.character(temperature)) %>% 
  select(cricket, temperature, sex, adult_mass) %>% 
  distinct() %>% 
  ggplot(aes(temperature, adult_mass, colour = temperature)) +
    stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.5) +
  stat_summary(geom = "crossbar",
               fun = mean,
               width = 0.5,
               fatten = 1) +
  geom_point(aes(shape = sex),
             alpha = 0.3,
             position = position_jitterdodge(
    jitter.height = 0, 
    jitter.width = 0.2,
    dodge.width = 1),
    size = 1.5) +
  scale_colour_manual(name = "Temperature (°C)", values = temperature_pal[-c(1,2)]) +
  scale_y_continuous(name = "Adult mass (mg)",
                     breaks = seq(0, 450, 50),
                     expand = expansion(mult = c(0, 0)),
                     limits = c(0, 450)) +
  labs(x =  "Temperature (°C)") +
  scale_shape_manual(name = "Sex",
                     values = c(1, 16)) +
  theme(legend.position = "none") +
  coord_cartesian(clip = "off") +
  annotate("text", label = "Males", x = 1, y = Inf, vjust = 1, hjust = 0)

male_mass
```


### ANOVA

1. Test a dependency of sex

There is no interaction between sex and temperature.

```{r}
mass_mod <- aov(adult_mass ~ temperature * sex, tpc %>% 
  filter(temperature >= 24,
         sex != "Juvenile",
         !is.na(adult_mass)) %>% 
     mutate(temperature = factor(temperature, 
                              levels = c("32", "24","26","28","30","34","36","38"))) %>% 
  select(cricket, temperature, sex, adult_mass) %>% 
  distinct())

summary(mass_mod)
```

2. Update the model to an additive model

Both sex and temperature are significant. Performed a Tukey correction on estimated marginal means as a post-hoc test. Averaged over sex because the model is additive.

26 &deg;C and 24 &deg;C are similar to each other, and different to all other temperatures.

```{r}
# Update model to remove interaction
mass_mod <- update(mass_mod, . ~ . -temperature:sex)
summary(mass_mod)
# Check model assumptions - all good
par(mfrow = c(2,2))
plot(mass_mod)
par(mfrow = c(1,1))

# Estimated marginal means with Tukey correction
emmeans(mass_mod, ~temperature) %>% pairs(adjust = "tukey") %>% 
  tidy() %>% 
  filter(adj.p.value < 0.05) 
```

### Coefficient of variation

```{r}
tpc %>% 
  filter(temperature >= 24,
         !is.na(adult_mass)) %>% 
  mutate(temperature = as.character(temperature)) %>% 
  select(cricket, temperature, sex, adult_mass) %>% 
  distinct() %>% 
  group_by(temperature, sex) %>% 
  summarise(CV = (sd(adult_mass) / mean(adult_mass)) * 100) %>% 
  arrange(sex, CV)
```

***

# Development time

Time to adulthood (eighth instar) varies among temperatures with lower temperatures developing slower (@fig-eighth). Different even at the higher temperatures.

```{r}
#| label: fig-eighth
#| fig-cap: "Development time to eighth instar (fully developed ovipositor and wings) for male and female crickets (points) reared at 8 temperatures (colours)."

tpc %>% 
  filter(sex != "Juvenile",
         !is.na(time_maturity)) %>% 
  select(temperature, cricket, sex, time_maturity) %>% 
  distinct() %>% 
  mutate(temperature = as.character(temperature)) %>% 
  ggplot(aes(temperature, time_maturity, colour = temperature)) +
  geom_jitter(width = 0.1, height = 0) +
  scale_colour_manual(values = temperature_pal[-c(1,2)]) +
  scale_y_continuous(limits = c(20, 140),
                     breaks = seq(0, 140, 20),
                     expand = expansion(mult = c(0,0)))+
  labs(x = "Temperature (°C)",
       y = "Time to adulthood (days)") +
  theme(legend.position = "none") +
  facet_grid(.~sex)
```

## Summary stats
### By temperature
```{r}
#| label: tbl-dev
#| tbl-cap: "Development time (days) to reach maturity from the start of the experiment (Week 0) for each temperature."

tpc %>% 
  filter(temperature >= 24) %>% 
  drop_na(time_maturity) %>% 
  # Group data by temperature
  group_by(temperature) %>%
  summarise(mean = mean(time_maturity),
            se = sd(time_maturity)/sqrt(n())) %>% 
  kable(digits = 1,
        col.names = c("Rearing temperature (°C)",
                      "Mean time (days)",
                      "Standard error"))
```

### By sex
```{r}
#| label: tbl-devsex
#| tbl-cap: "Development time (days) to reach maturity from the start of the experiment (Week 0) for each sex."

tpc %>% 
  filter(temperature >= 24) %>% 
  drop_na(time_maturity) %>% 
  # Group data by temperature
  group_by(sex) %>%
  summarise(mean = mean(time_maturity),
            se = sd(time_maturity)/sqrt(n())) %>% 
  kable(digits = 1,
        col.names = c("Sex",
                      "Mean time (days)",
                      "Standard error"))
```

# Development rate
```{r}
#| label: fig-3C
#| fig-cap: "Development rate from hatch to adulthood for female crickets reared at 8 temperatures (colours)."

female_dev <- tpc %>% 
  filter(!is.na(dev_rate),
         sex == "Female") %>% 
  select(temperature, cricket, sex, dev_rate) %>% 
  distinct() %>% 
  mutate(temperature = as.character(temperature)) %>% 
  ggplot(aes(temperature, dev_rate, colour = temperature)) +
  geom_hline(yintercept = 1/42, linetype = 2, colour = "grey") +
    stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.5) +
  stat_summary(geom = "crossbar",
               fun = mean,
               width = 0.5,
               fatten = 1) +
  geom_point(aes(shape = sex), 
             alpha = 0.3,
             position = position_jitterdodge(
    jitter.height = 0, 
    jitter.width = 0.7,
    dodge.width = 1),
    size = 1.5) +
  scale_colour_manual(values = temperature_pal[-c(1,2)]) +
  scale_y_continuous(limits = c(0, 0.045), 
                     expand = expansion(mult = c(0, 0)),
                     breaks = seq(0, 0.05, 0.005)) +
  labs(x = "Temperature (°C)",
       y = expression(~Development~rate~(day^-1))) +
    scale_shape_manual(name = "Sex",
                      values = c(16)) +
  theme(legend.position = "none") +
  coord_cartesian(clip = "off") +
  annotate("text", label = "Females", x = 1, y = Inf, vjust = 1, hjust = 0) +
  annotate("text", label = "Temperature: F=105.5 P<0.01", x = 1, y = 0.045/11, vjust = 1, hjust = 0)
```


```{r}
#| label: fig-3D
#| fig-cap: "Development rate from hatch to adulthood for male crickets reared at 8 temperatures (colours)."

male_dev <- tpc %>% 
  filter(!is.na(dev_rate),
         sex == "Male") %>% 
  select(temperature, cricket, sex, dev_rate) %>% 
  distinct() %>% 
  mutate(temperature = as.character(temperature)) %>% 
  ggplot(aes(temperature, dev_rate, colour = temperature)) +
  geom_hline(yintercept = 1/42, linetype = 2, colour = "grey") +
    stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.5) +
  stat_summary(geom = "crossbar",
               fun = mean,
               width = 0.5,
               fatten = 1) +
  geom_point(aes(shape = sex), 
             alpha = 0.3,
             position = position_jitterdodge(
    jitter.height = 0, 
    jitter.width = 0.7,
    dodge.width = 1),
    size = 1.5) +
  scale_colour_manual(values = temperature_pal[-c(1,2)]) +
  scale_y_continuous(limits = c(0, 0.045), 
                     expand = expansion(mult = c(0, 0)),
                     breaks = seq(0, 0.05, 0.005)) +
  labs(x = "Temperature (°C)",
       y = expression(~Development~rate~(day^-1))) +
    scale_shape_manual(name = "Sex",
                      values = c(1)) +
  theme(legend.position = "none") +
  coord_cartesian(clip = "off") +
  annotate("text", label = "Males", x = 1, y = Inf, vjust = 1, hjust = 0)
```

### ANOVA development rate

1. Test a dependency of sex

There is no interaction between sex and temperature.

```{r}
devrate_mod <- aov(dev_rate ~ temperature * sex, tpc %>% 
  filter(temperature >= 24,
         sex != "Juvenile",
         !is.na(dev_rate)) %>% 
     mutate(temperature = factor(temperature, 
                              levels = c("32", "24","26","28","30","34","36","38"))) %>% 
  select(cricket, temperature, sex, dev_rate) %>% 
  distinct())

summary(devrate_mod)
```

2. Update the model to an additive model

Both sex and temperature are significant. Post hoc test indicates 38 &degc;C is similar to 32 and 34 &degc;C. 

```{r}
devrate_mod <- update(devrate_mod, . ~ . -temperature:sex)
summary(devrate_mod)
# Check model assumptions - good enough
par(mfrow = c(2,2))
plot(devrate_mod)
par(mfrow = c(1,1))

# Estimated marginal means with Tukey correction
emmeans(devrate_mod, ~temperature) %>% pairs(adjust = "tukey") %>% 
  tidy() %>% 
  filter(adj.p.value > 0.05) 
```

# Longevity

```{r}
#| label: fig-longevity
#| fig-cap: "Lifespan of male and female crickets (points) reared at 5 temperatures. Crickets that died before sex could be determined (6th instar) were excluded."

lifespan_graph <- tpc %>% 
  filter(sex != "Juvenile",
         reason_removed == "Dead",
         temperature >= 24) %>% 
  select(temperature, cricket, sex, longevity) %>% 
  distinct() %>% 
  mutate(temperature = as.character(temperature)) %>% 
  ggplot(aes(temperature, longevity, colour = temperature)) +
  geom_hline(yintercept = 42, linetype = 2, colour = "grey") +
      stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.5,
               show.legend = FALSE) +      
  stat_summary(geom = "crossbar",
               fun = mean,
               width = 0.5,
               show.legend = FALSE,
               fatten = 1) +
  geom_point(aes(shape = sex), 
             alpha = 0.3,
             position = position_jitterdodge(
    jitter.height = 0, 
    jitter.width = 0.5,
    dodge.width = 0.3),
    size = 1.5) +
  xlab("Temperature (°C)") +
  scale_y_continuous(name = "Longevity (days)",
                     limits = c(0, 300), 
                     expand = expansion(mult = c(0, 0)),
                     breaks = seq(0, 300, 25)) +
  scale_colour_manual(values = temperature_pal[3:10], guide = "none") +
  scale_shape_manual(name = "Sex",
                      values = c(16, 1)) +
  theme(legend.position = "inside",
        legend.position.inside = c(0.8, 0.8)) +
  coord_cartesian(clip = "off")

lifespan_graph
```

## ANOVA

1. Test a dependency of sex

There is no interaction between sex and temperature.

```{r}
lifespan_mod <- aov(longevity ~ temperature * sex, tpc %>% 
  filter(temperature >= 24,
         sex != "Juvenile",
         !is.na(longevity)) %>% 
     mutate(temperature = factor(temperature, 
                              levels = c("32", "24","26","28","30","34","36","38"))) %>% 
  select(cricket, temperature, sex, longevity) %>% 
  distinct())

summary(lifespan_mod)
```

2. Update the model to an additive model

Temperature is significant.  
Sex is not significant.

```{r}
lifespan_mod <- update(lifespan_mod, . ~ . -temperature:sex)
summary(lifespan_mod)

# Check model assumptions - all good
par(mfrow = c(2,2))
plot(lifespan_mod)
par(mfrow = c(1,1))

# Estimated marginal means with Tukey correction
emmeans(lifespan_mod, ~temperature) %>% pairs(adjust = "tukey") %>% 
  tidy() %>% 
  filter(adj.p.value > 0.05) 
```

Means, variance and sample size
```{r}
tpc %>% 
  filter(sex != "Juvenile",
         reason_removed == "Dead",
         temperature >= 24) %>% 
  select(temperature, cricket, sex, longevity) %>% 
  distinct() %>% 
  group_by(sex, temperature) %>% 
  summarise(min = min(longevity),
            max = max(longevity),
            n = n()) %>% 
  kable(col.names = c("Sex", 
                      "Rearing temperature (°C)",
                      "Min lifespan (days)",
                      "Max lifespan (days)",
                      "Sample size"))
```

## Adult lifespan

Used in Archer et al. 2013

```{r}
tpc %>%
  filter(temperature >= 24,
         sex != "Juvenile") %>% 
  group_by(temperature, sex) %>% 
  mutate(adult_lifespan = longevity - time_maturity) %>% 
  drop_na(adult_lifespan) %>% 
  summarise(mean = mean(adult_lifespan),
            se = sd(adult_lifespan)/sqrt(n())) %>% 
  kable(digits = 2)
```

***

# Yield

Yield is calculated two ways:

## 1. For maximum potential yield at adulthood

$$
yield = 
\frac{adult \ mass}{development \ time}
$$

```{r}
individual_yield <- tpc %>% 
  filter(temperature >= 24) %>% 
  mutate(temperature = as.factor(temperature)) %>% 
  distinct(temperature, adult_mass, cricket, time_maturity) %>% 
  mutate(yield_index = adult_mass / time_maturity) %>% 
  group_by(temperature) %>% 
  drop_na(yield_index)
  

individual_yield_plot <- individual_yield %>% 
  summarise(temp_yield = mean(yield_index),
            yield_se = sd(yield_index)/sqrt(n())) %>% 
  ggplot(aes(temperature, temp_yield,
             group = temperature,
             fill = temperature)) +
  geom_col() +
  geom_errorbar(aes(y = temp_yield,
                    ymin = temp_yield - yield_se,
                    ymax = temp_yield + yield_se), 
                width = 0.5, alpha = 0.5) +
  scale_fill_manual(values = temperature_pal[-c(1,2)])  +
  scale_x_discrete(name = "Temperature (°C)") +
  scale_y_continuous(name = expression(Maximum~potential~yield~(mg~day^-1)),
                     limits = c(0, 10),
                     breaks = seq(0, 10, 1),
                     expand = c(0, 0)) +
  theme(legend.position = "none")

individual_yield_plot
```

```{r}
aov(yield_index ~ temperature, individual_yield) %>% 
  emmeans(., ~temperature) %>% pairs(adjust = "tukey") %>% 
  tidy() %>% 
  filter(str_detect(contrast, "36"),
         adj.p.value >= 0.05) 
```

## 2. Weekly maximum potential yield

$$
yield = 
\frac{weekly \ mass}{week}
$$

```{r}
optimal_yield <- tpc %>% 
  filter(temperature >= 24) %>% 
  # Make experiment day non-0
  mutate(temperature = as.factor(temperature),
         week = week + 1) %>% 
  distinct(temperature, mass, cricket, week) %>% 
  group_by(cricket, week) %>% 
  mutate(yield_index = mass / week) %>% 
  drop_na(yield_index) %>% 
  group_by(week, temperature) %>% 
  summarise(temp_yield = mean(yield_index),
            yield_se = sd(yield_index)/sqrt(n())) %>% 
  filter(week <= 8) %>% 
  mutate(week = week - 1)

optimal_yield_plot <- ggplot(optimal_yield, aes(week, temp_yield, colour = temperature)) +
  geom_line() +
  geom_point() +
  geom_errorbar(aes(y = temp_yield,
                    ymin = temp_yield - yield_se,
                    ymax = temp_yield + yield_se), 
                width = 0.2, alpha = 0.3) +
  scale_colour_manual(name = "Temperature (°C)",
                      values = temperature_pal[-c(1,2)])  +
  scale_x_continuous(name = "Week",
                     limits = c(0, 7.1),
                     breaks = seq(0, 7, 1),
                     expand = c(0.01, 0)) +
  scale_y_continuous(name = expression(Weekly~potential~yield~(mg~day^-1)),
                     limits = c(0, 50),
                     breaks = seq(0, 50, 10),
                     expand = c(0, 0)) 

optimal_yield_plot
```


***

# Incubator temperature

The original inkbird for 28C broke and the recovered memory is different from the original download. The inkbird was replaced with the one from the 22C incubator.

```{r inkbird}
# List files
inkbird_files <- list.files("tpc/inkbirds/",
                            pattern = "_inkbird_",
                            full.names = TRUE)

# Import all files
inkbird <- lapply(FUN = read.csv, inkbird_files)
# Name the files based on file name: regrex all characters between "inkbirds/" and "_log"
names(inkbird) <- str_extract(inkbird_files,
                              pattern = "(?<=inkbirds/)(.*)(?=_log)") 

# Tidy columns
inkbird <- inkbird %>% 
  map(~ .x %>% select(-starts_with("MAC"))) %>% 
  map(~ mutate(.x, Time = as.POSIXct(Time))) %>% 
  map(~ .x %>% rename(Temperature = 2,
                      Humidity = 3)) %>% 
  # Trim data to experiment
  map(~ filter(.x, Time >= as.POSIXct("2023-05-20 00:00:00") &
                 Time < as.POSIXct(Sys.Date()))) %>% 
  bind_rows(., .id = "Target_temp") %>%  # add list name as ID column
  mutate(Target_temp = str_extract(Target_temp, "[^_]+") %>% 
           as.numeric()) %>% # all characters before _
  left_join(., distinct(tpc_survival, incubator_number, temperature), 
            by = c("Target_temp" = "temperature")) %>% 
  mutate(Target_temp = as.character(Target_temp),
         row_id = row_number())
```

Temperature in incubator 15 (24 &deg;C) spikes at 30 &deg;C at 6:30 PM then returns to normal by midnight. These are removed.

```{r}
# Remove temperature spike from 24
rm_temp1 <- inkbird %>%
  filter(Target_temp == 24,
         Time < "2023-07-05 00:00:00",
         Time >= "2023-07-04 18:30:00") %>% 
  pull(row_id)
# Remove old data from 28 after inkbird replaced
rm_temp2 <- inkbird %>%
  filter(Target_temp == 28,
         Time < "2023-08-05 00:00:00") %>% 
    pull(row_id)
# Trim last data point in 34 after inkbird removed from incubator
rm_temp3 <- inkbird %>%
  filter(Target_temp == 34) %>%
  slice_head() %>% 
  pull(row_id)

rm_temp <- c(rm_temp1, rm_temp2, rm_temp3)
inkbird <- filter(inkbird, !row_id %in% rm_temp)
```

```{r}
summary_inkbird <- inkbird %>% 
  group_by(Target_temp, incubator_number) %>% 
  summarise(temperature = mean(Temperature, na.rm = TRUE),
            temperature_sd = sd(Temperature, na.rm = TRUE),
            humidity = mean(Humidity, na.rm = TRUE),
            humidity_sd = sd(Humidity, na.rm = TRUE))

kable(summary_inkbird[,-2], digits = 3,
      col.names = c("Target temperature", 
                    "Mean temperature (°C)",
                    "Temperature standard deviation (°C)",
                    "Mean relative humidity (%)",
                    "RH standard deviation (%)"))

ggplot(summary_inkbird, aes(Target_temp, temperature, colour = Target_temp)) +
  geom_point() +
  geom_errorbar(aes(ymin = temperature - temperature_sd,
                    ymax = temperature + temperature_sd),
                width = 0.3) +  
  scale_colour_manual(name = "Incubator temperature (°C)", 
                      values = temperature_pal) +
  scale_y_continuous(breaks =  seq(20, 38, 2)) +
  labs(x = "Target temperature",
       y = "Temperature (°C)") +
  theme(panel.grid.major.y = element_line())

ggplot(summary_inkbird, aes(Target_temp, humidity, colour = Target_temp)) +
  geom_point() +
  geom_errorbar(aes(ymin = humidity - humidity_sd,
                    ymax = humidity + humidity_sd),
                width = 0.3) +  
  scale_colour_manual(name = "Incubator temperature (°C)", 
                      values = temperature_pal) +
  scale_y_continuous(limits = c(0, 100),
                     breaks = seq(0, 100, 10),
                     expand = expansion(c(0.01, 0.01))) +
  labs(x = "Target temperature",
       y = "Relative humidity (%)")
```

```{r}
ggplot(inkbird, aes(Target_temp, Temperature, colour = Target_temp)) +
  geom_boxplot(fill = NA) +
  scale_colour_manual(name = "Incubator temperature (°C)", 
                      values = temperature_pal) +
  scale_y_continuous(breaks =  seq(20, 38, 2)) +
  labs(x = "Target temperature",
       y = "Temperature (°C)") +
  theme(panel.grid.major.y = element_line())

ggplot(inkbird, aes(Target_temp, Humidity, colour = Target_temp)) +
  geom_boxplot(fill = NA) +  
  scale_colour_manual(name = "Incubator temperature (°C)", 
                      values = temperature_pal) +
  scale_y_continuous(limits = c(0, 100),
                     breaks = seq(0, 100, 10),
                     expand = expansion(c(0.01, 0.01))) +
  labs(x = "Target temperature",
       y = "Relative humidity (%)")
```


```{r}
#| layout-ncol: 2
#| fig-column: page-right
#| label: fig-inkbirds
#| fig-cap: "Environmental conditions in the incubators."
#| fig-subcap: 
#|   - "Air temperature (°C)"
#|   - "Relative humidity (%)"

ggplot(inkbird, aes(Time, Temperature, col = Target_temp)) +
  geom_line() +
  scale_x_datetime(breaks = "1 week", 
                   date_labels = "%Y-%m-%d") +
  scale_y_continuous(name = "Temperature (°C)",
                     limits = c(18, 40),
                     breaks = seq(18, 40, 2),
                     expand = expansion(c(0.01,0.01))) +
  scale_colour_manual(name = "Incubator temperature (°C)", 
                      values = temperature_pal) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.y = element_line())

ggplot(inkbird, aes(Time, Humidity, col = Target_temp)) +
  geom_line() +
  scale_x_datetime(breaks = "1 week", 
                   date_labels = "%Y-%m-%d") +
  scale_y_continuous(name = "Relative humidity (%)",
                     limits = c(0, 100),
                     breaks = seq(0, 100, 10),
                     expand = expansion(c(0.01,0.01))) +
  scale_colour_manual(name = "Incubator temperature (°C)", 
                      values = temperature_pal) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.y = element_line())

```

***

# Manuscript Figures

## Figure 1

 * Survival
 * Growth curve
 * Instar growth

```{r}
fig1 <- plot_grid(
  surv_plot + theme(legend.position = "none"),
  growth_curve + 
    scale_x_continuous(name = "Week",
                       limits = c(0, 38),
                       breaks = seq(0, 38, 2),
                       expand = expansion(c(0, 0), c(0.5, 0))) +
    theme(legend.position = "none"),
  instar_curve + theme(legend.position = "none") , 
  ncol = 1,
  rel_heights = c(1.5, 1, 1.1),
  labels = "AUTO") %>% 
  plot_grid(., get_legend(surv_plot), rel_widths = c(1, 0.2))

ggsave2(fig1, file = "tpc/output/fig1.png",
        dpi = 300,
        units = "cm",
        height = 17,
        width = 17)
```

## Figure 2

* Adult mass (Female and Male)
* Development rate (Female and Male)
* Proportion survival to adulthood
* Longevity


```{r}
fig3 <- plot_grid(
  female_mass, male_mass,
  female_dev, male_dev,
  prop_adult_plot,
  lifespan_graph +
  annotate("text", label = "Temperature: F=49.4 P<0.01", x = 1, y = 300/11, vjust = 1, hjust = 0), 
  ncol = 2,
  nrow = 3,
  labels = "AUTO",
  align = "v"
  )

ggsave2(fig3, file = "tpc/output/fig3.png",
        dpi = 300,
        units = "cm",
        height = 19,
        width = 19)
```


Figure 3 is reproductive output from Part 2.

## Figure 4

* Potential yield
* Weekly yield

```{r}
fig4 <- plot_grid(individual_yield_plot, 
                  optimal_yield_plot + theme(legend.position = "none"), 
                  get_legend(optimal_yield_plot),
          ncol = 3,
          labels = c("A", "B", ""),
          align = "h",
          rel_widths = c(0.8, 0.8, 0.3))

ggsave2(fig4, file = "tpc/output/fig4.png",
        dpi = 300,
        units = "cm",
        height = 8,
        width = 17)
```

***

# Session info
```{r session}
sessionInfo()
```